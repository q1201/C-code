/*
  时间：2021年11月10日20:20

  功能：
  
  目的：	
*/
# include <stdio.h>

int * test();

int main()
{
	//1. 指针未初始化
 	int * p;       //p是一个局部指针变量，局部变量不初始化默认为随机值

	*p = 20;       //非法访问内存  


	//2. 指针越界访问
	int arr[10] = { 0 };      //arr[0] - arr[9]

	int * pr = arr;           //*pr == arr[0]
	int i = 0;

	for (i=0; i<=10; i++)     //循环11次
	{
		*pr = i;
		pr++;
	}                        //最终*pr == arr[10],超出了范围

	//3. 指针指向的空间释放
	int * ps = test();       //退出函数后，空间被释放

	*ps = 20;                //地址已经不属于a了

	//野指针的避免:

	//1.当不知道指针应该初始化为什么地址时，直接初始化为空指针;指针置为NULL时,不可使用
	int * pb = NULL;

	//2. 小心指针越界：C语言本身不会检查数组的越界行为，须自己小心检查

	//3. 指针指向的空间被释放，及时置为NULL

	//4. 指针使用前进行有效性的检查
	if (pb != NULL)
	{
		*pb = 10;
	}

	return 0;
} 

int * test()
{
	int a = 10;

	return &a;
}

/*
在VC++6.0中的输出结果是:
------------------------------

-------------------------------
总结：     
*/             
