/*
递归：在一个函数（或者方法）体内调用这个函数自身，直到某个条件满足（否则会一直执行下去，直到栈内存溢出）

循环：通过设置一个初始值和终止条件，并在这个范围内重复计算

内涵：你打开面前这扇门，看到屋里面还有一扇门。你走过去，发现手中的钥匙还可以打开它，你推开门，发现里面还有一扇门，你继续打开它。
	  若干次之后，你打开面前的门后，发现只有一间屋子，没有门了。然后，你开始原路返回，每走回一间屋子，你数一次，走到入口的时候，
	  你可以回答出你到底用这你把钥匙打开了几扇门

功能：主要把大且杂的问题通过层层转化为一个与原问题相似但规模较小的问题来求解 (大事化小)

递归的两个必要条件：
                   1.存在限制条件，当满足这个限制条件时，递归便不再继续

				   2.每次调用递归后越来越接近这个限制条件
*/
# include <stdio.h>

void print(unsigned int n)
{	
	if (n > 9)                         //限制条件；层次不可太深，以防栈溢出
	{	
		print(n / 10);
	}

	printf("%u ", n%10);
}

int main(void)
{
	unsigned int num = 0;
	scanf("%u", &num);
	
	print(num);
	
	return 0;
}