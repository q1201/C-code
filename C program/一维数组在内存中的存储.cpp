/*
  时间：2021年10月16日21:34

  功能：
  
  目的：	
*/
# include <stdio.h>

int main()
{
	int arr[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

//	printf("%p\n", 0x12);                                  //00000012  %p - 按地址(指针)的格式打印(十六进制)
//	printf("%x\n", 0x12);                                  //12        %x(%X) - 以十六进制输出
//	printf("%#X\n", 0x12);                                 //0X12      

	int i = 0;

	for (i=0; i<10; i++)
	{
		printf("&arr[%d] = %p\n", i, &arr[i]);
	}

	return 0;
}
/*
在VC++6.0的输出结果为：
---------------------------
                                     16进制 0 1 2 3 4 5 6 7 8 9  A  B  C  D  E  F 
									                            10 11 12 13 14 15 
&arr[0] = 0019FF08                             
&arr[1] = 0019FF0C                             08 + 4 = 0C
&arr[2] = 0019FF10                             0C + 4 = 10
&arr[3] = 0019FF14                             10 + 4 = 14
&arr[4] = 0019FF18                             14 + 4 = 18
&arr[5] = 0019FF1C                             18 + 4 = 1C 
&arr[6] = 0019FF20                             1C + 4 = 20
&arr[7] = 0019FF24                             20 + 4 = 24
&arr[8] = 0019FF28                             24 + 4 = 28
&arr[9] = 0019FF2C                             28 + 4 = 2C 
  
---------------------------
结论：
       1.一维(二维)数组在内存中是连续存放的

       2.随着数组下标的增长，地址是由低到高变化的
*/
